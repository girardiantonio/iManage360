@model iManage360.Models.DbModels.Documento

@{
    ViewBag.Title = "CreaDocumento";
}

<h2 class="text-center">Aggiungi Documento</h2>
<hr />

@using (Html.BeginForm("CreaDocumento", "Documento", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.ID_Utente, "ID_Utente", htmlAttributes: new { @class = "control-label col-md-2", @id = "ID_UtenteLabel" })
            <div class="col-md-10">
                @Html.DropDownList("ID_Utente", null, htmlAttributes: new { @class = "form-control", @id = "ID_UtenteDrop" })
                @Html.ValidationMessageFor(model => model.ID_Utente, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.NomeDocumento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeDocumento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeDocumento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentoUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocumentoUrl, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                @Html.ValidationMessageFor(model => model.DocumentoUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descrizione, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descrizione, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descrizione, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Categoria, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="mt-3 mb-3 col-md-offset-2 col-md-10">
                <input type="submit" value="Aggiungi" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Ritorna alla lista", "ListaDocumento")
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            // Nascondi il campo ID_Utente e il suo label all'inizio
            $("#ID_UtenteLabel, #ID_UtenteDrop").hide();

            // Recupera il valore del parametro "tipo" dall'URL
            var tipo = getParameterByName("tipo");

            // Mostra o nascondi il campo ID_Utente e il suo label in base al valore del parametro "tipo"
            if (tipo === "Dipendente" || tipo === "Cliente") {
                $("#ID_UtenteLabel, #ID_UtenteDrop").show();
            } else {
                $("#ID_UtenteLabel, #ID_UtenteDrop").hide();
            }

            // Funzione per ottenere il valore di un parametro dall'URL
            function getParameterByName(name) {
                name = name.replace(/[\[\]]/g, "\\$&");
                var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                    results = regex.exec(window.location.href);
                if (!results) return null;
                if (!results[2]) return '';
                return decodeURIComponent(results[2].replace(/\+/g, " "));
            }
        });
    </script>
}